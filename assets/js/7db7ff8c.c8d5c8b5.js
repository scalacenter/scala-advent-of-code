"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8998],{8838:(t,a,e)=>{e.r(a),e.d(a,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>m});var i=e(7462),n=(e(7294),e(3905));e(6340);const r={},l="Day 1: Historian Hysteria",o={unversionedId:"2024/puzzles/day01",id:"2024/puzzles/day01",title:"Day 1: Historian Hysteria",description:"by @spamegg1",source:"@site/target/mdoc/2024/puzzles/day01.md",sourceDirName:"2024/puzzles",slug:"/2024/puzzles/day01",permalink:"/scala-advent-of-code/2024/puzzles/day01",draft:!1,editUrl:"https://github.com/scalacenter/scala-advent-of-code/edit/website/docs/2024/puzzles/day01.md",tags:[],version:"current",frontMatter:{},sidebar:"adventOfCodeSidebar",previous:{title:"Setup",permalink:"/scala-advent-of-code/setup"},next:{title:"Day 2: Red-Nosed Reports",permalink:"/scala-advent-of-code/2024/puzzles/day02"}},s={},m=[{value:"Puzzle description",id:"puzzle-description",level:2},{value:"Solution Summary",id:"solution-summary",level:2},{value:"Parsing",id:"parsing",level:3},{value:"Part 1",id:"part-1",level:3},{value:"Part 2",id:"part-2",level:3},{value:"Solutions from the community",id:"solutions-from-the-community",level:2}],h={toc:m};function p(t){let{components:a,...e}=t;return(0,n.kt)("wrapper",(0,i.Z)({},h,e,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"day-1-historian-hysteria"},"Day 1: Historian Hysteria"),(0,n.kt)("p",null,"by ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/spamegg1"},"@spamegg1")),(0,n.kt)("h2",{id:"puzzle-description"},"Puzzle description"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://adventofcode.com/2024/day/1"},"https://adventofcode.com/2024/day/1")),(0,n.kt)("h2",{id:"solution-summary"},"Solution Summary"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Parse the input to split it into two lists (left/right), each sorted in increasing order."),(0,n.kt)("li",{parentName:"ol"},"Find the distance scores (for ",(0,n.kt)("inlineCode",{parentName:"li"},"part1"),") and the similarity scores (for ",(0,n.kt)("inlineCode",{parentName:"li"},"part2"),")."),(0,n.kt)("li",{parentName:"ol"},"Sum the scores.")),(0,n.kt)("h3",{id:"parsing"},"Parsing"),(0,n.kt)("p",null,"Our parser iterates over the lines, extracts the pair of numbers from each line,\nthen splits them into two lists (lefts and rights), and separately sorts the lists.\nTherefore it looks like this:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-scala"},'def parse(input: String): (Seq[Long], Seq[Long]) =\n  // Extract pairs of numbers from each line\n  val pairs = input\n    .linesIterator\n    .map(line => line.split("   ").map(_.toLong))\n    .toSeq\n\n  // Group the left and right members from each pair, sort them\n  val lefts = pairs.map(_.head).toSeq.sorted\n  val rights = pairs.map(_.last).toSeq.sorted\n  (lefts, rights)\n')),(0,n.kt)("h3",{id:"part-1"},"Part 1"),(0,n.kt)("p",null,"Now that the lefts and rights are sorted in increasing order, we can zip them,\nso that the first smallest on the left is paired with the first smallest on the right,\nthe second smallest on the left is paired with the second smallest on the right, and so on.\nThen we can find the distances between them, and sum the distances:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-scala"},"def part1(input: String): Long =\n  val (lefts, rights) = parse(input)\n  lefts\n    .zip(rights)\n    .map((left, right) => math.abs(left - right)) // distances\n    .sum\nend part1\n")),(0,n.kt)("h3",{id:"part-2"},"Part 2"),(0,n.kt)("p",null,"Very similar, but instead of distances, we find a left number's similarity on the right list.\nWe do this by counting how many times the left number occurs on the right list,\nthen multiply that count by the number itself.\nFinally we sum the similarity scores of all the left numbers:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-scala"},"def part2(input: String): Long =\n  val (lefts, rights) = parse(input)\n  lefts\n    .map(left => rights.count(_ == left) * left) // similarity scores\n    .sum\nend part2\n")),(0,n.kt)("h2",{id:"solutions-from-the-community"},"Solutions from the community"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Jannyboy11/AdventOfCode2024/blob/master/src/main/scala/day01/Day01.scala"},"Solution")," of ",(0,n.kt)("a",{parentName:"li",href:"https://x.com/JanBoerman95"},"Jan Boerman")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/bishabosha/advent-of-code-2024/blob/main/2024-day01.scala"},"Solution")," by ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/bishabosha"},"Jamie Thompson")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/nikiforo/aoc24/blob/main/src/main/scala/io/github/nikiforo/aoc24/D1T2.scala"},"Solution")," by ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/nikiforo"},"Artem Nikiforov")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/rmarbeck/advent2024/tree/main/day1"},"Solution")," by ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/rmarbeck"},"Rapha\xebl Marbeck")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Philippus/adventofcode/blob/main/src/main/scala/adventofcode2024/Day01.scala"},"Solution")," by ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/philippus"},"Philippus Baalman")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://scastie.scala-lang.org/Sporarum/jVlQBCvoQXCtlK4ryIn42Q/4"},"Solution")," by ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/Sporarum"},"Quentin Bernet")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/jnclt/adventofcode2024/blob/main/day01/historian-hysteria.sc"},"Solution")," by ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/jnclt"},"jnclt")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/YannMoisan/advent-of-code/blob/master/2024/src/main/scala/Day1.scala"},"Solution")," by ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/YannMoisan"},"YannMoisan")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/itsjoeoui/aoc2024/blob/main/src/day01.scala"},"Solution")," by ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/itsjoeoui"},"itsjoeoui")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/w-r-z-k/aoc2024/blob/main/src/main/scala/Day1.scala"},"Solution")," by ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/w-r-z-k"},"Richard W")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/makingthematrix/AdventOfCode2024/blob/main/src/main/scala/io/github/makingthematrix/AdventofCode2024/DayOne.scala"},"Solution")," by ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/makingthematrix"},"Maciej Gorywoda")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/samuelchassot/AdventCode_2024/blob/60c782a1a05fbbb65e44fb923cddf48edc7b5625/01/Day01.scala"},"Solution")," by ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/samuelchassot"},"Samuel Chassot")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/scarf005/aoc-scala/blob/main/2024/day01.scala"},"Solution")," by ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/scarf005"},"scarf")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/nichobi/advent-of-code-2024/blob/main/01/solution.scala"},"Solution")," by ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/nichobi"},"nichobi")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/guycastle/advent_of_code/blob/main/src/main/scala/aoc2024/day01/DayOne.scala"},"Solution")," by ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/guycastle"},"Guillaume Vandecasteele")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/rolandtritsch/scala3-aoc-2024/blob/trunk/main/src/aoc2024/Day01.scala"},"Solution")," by ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/rolandtritsch"},"Roland Tritsch")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/profunctor-optics/advent-2024/blob/main/src/main/scala/advent2024/Day01.scala"},"Solution")," by ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/joroKr21"},"Georgi Krastev")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/jportway/advent2024/blob/master/src/main/scala/Day1.scala"},"Solution")," by ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/jportway"},"Joshua Portway")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/TheDrawingCoder-Gamer/adventofcode2024/blob/e163baeaedcd90732b5e19f578a2faadeb1ef872/src/main/scala/day1.sc"},"Solution")," by ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/TheDrawingCoder-Gamer"},"Bulby")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/AvaPL/Advent-of-Code-2024/tree/main/src/main/scala/day1"},"Solution")," by ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/AvaPL"},"Pawe\u0142 Cembaluk"))),(0,n.kt)("p",null,"Share your solution to the Scala community by editing this page.\nYou can even write the whole article! ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/scalacenter/scala-advent-of-code/discussions/424"},"See here for the expected format")))}p.isMDXComponent=!0}}]);